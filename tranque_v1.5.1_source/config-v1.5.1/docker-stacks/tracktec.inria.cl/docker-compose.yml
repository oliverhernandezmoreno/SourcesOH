version:          "3.4"

x-env-files:      &env-files
  env_file:
    - .env
    - .secrets

x-logging:        &logging
  driver:         "json-file"
  options:
    max-size:     "10m"
    max-file:     "3"

services:
  storage:
    image:        minio/minio:RELEASE.2019-08-21T19-40-07Z
    <<:           *env-files
    restart:      always
    logging:      *logging
    ports:
      - 9000:9000
    volumes:
      - "minio:/data"
    command:      "server /data"

  kibana:
    image:        registry.gitlab.com/inria-chile/tranque/config/kibana:dev
    restart:      always
    depends_on:
      - elasticsearch
    logging:      *logging

  e700-frontend:
    image:        registry.gitlab.com/inria-chile/tranque/e700-frontend:dev
    <<:           *env-files
    restart:      always
    depends_on:
      - django
    logging:      *logging

  proxy:
    image:        registry.gitlab.com/inria-chile/tranque/config/secure-proxy:dev
    restart:      always
    depends_on:
      - django
      - django-static
      - kibana
    logging:      *logging
    ports:
      - 80:80
    volumes:
      - ./proxy.default.conf:/etc/nginx/conf.d/default.conf

  cron:
    image:        registry.gitlab.com/inria-chile/tranque/config/cron:dev
    <<:           *env-files
    restart:      always
    depends_on:
      - django
    logging:      *logging

  django:
    image:        registry.gitlab.com/inria-chile/tranque/backend:dev
    healthcheck:
      test: nc -z localhost 8000 || exit 1
      interval: 1s
      timeout: 5s
      retries: 120
    <<:           *env-files
    restart:      always
    depends_on:
      - postgis
      - elasticsearch
      - amqpbroker
    volumes:
      - "./setup-package:/initial-setup"
    logging:      *logging


  django-amqpconsumer-smc:
    image:        registry.gitlab.com/inria-chile/tranque/backend:dev
    <<:           *env-files
    restart:      always
    entrypoint:   ["/entrypoint.amqpconsumer.sh"]
    command:      ["./manage.py", "runconsumer", "--smc"]
    logging:      *logging
    depends_on:
      - postgis
      - elasticsearch

  django-amqpconsumer:
    image:        registry.gitlab.com/inria-chile/tranque/backend:dev
    <<:           *env-files
    restart:      always
    entrypoint:   ["/entrypoint.amqpconsumer.sh"]
    command:      ["./manage.py", "runconsumer"]
    logging:      *logging
    depends_on:
      - postgis
      - elasticsearch
      - amqpbroker

  django-static:
    image:        registry.gitlab.com/inria-chile/tranque/backend/static-nginx:dev
    <<:           *env-files
    restart:      always
    logging:      *logging

  postgis:
    image:        "mdillon/postgis:10"
    <<:           *env-files
    restart:      always
    volumes:
      - "database:/var/lib/postgresql/data"
    logging:      *logging

  elasticsearch:
    image:        registry.gitlab.com/inria-chile/tranque/config/elasticsearch:dev
    <<:           *env-files
    restart:      always
    volumes:
      - "esdata:/usr/share/elasticsearch/data"
    logging:      *logging

  enrichment:
    image:        registry.gitlab.com/inria-chile/tranque/enrichment:dev
    <<:           *env-files
    restart:      always
    depends_on:
      - elasticsearch
      - amqpbroker
      - django
    logging:      *logging

  amqpbroker:
    image:        registry.gitlab.com/inria-chile/tranque/config/rabbitmq:dev
    <<:           *env-files
    restart:      always
    logging:      *logging

  stats:
    image:        registry.gitlab.com/inria-chile/tranque/stats/r-base:dev
    <<:           *env-files
    restart:      always
    logging:      *logging

  logstash:
    image:        registry.gitlab.com/inria-chile/tranque/config/logstash:master
    <<:           *env-files
    restart:      always
    depends_on:
      - elasticsearch
      - amqpbroker
      - redis
    logging:      *logging

  redis:
    image:        "redis:4-alpine"
    restart:      always
    logging:      *logging

  beats-consumer:
    image:        registry.gitlab.com/inria-chile/tranque/beats-consumer:dev
    <<:           *env-files
    restart:      always
    depends_on:
      - redis
    logging:      *logging

  fake-beats:
    image:        registry.gitlab.com/inria-chile/tranque/fake-beats:dev
    <<:           *env-files
    restart:      always
    depends_on:
      - redis
    volumes:
      - "./volumes/behaviours:/app-assets"
    logging:      *logging

volumes:
  database:
  esdata:
  minio:

networks:
  default:
    external:
      name: sml-network
