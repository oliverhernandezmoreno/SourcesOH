# Generated by Django 2.1 on 2019-11-01 15:06

import base.fields
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import reportforms.schema


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('targets', '0029_auto_20191022_1856'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('documents', '0003_auto_20190605_1626'),
    ]

    operations = [
        migrations.CreateModel(
            name='FormCase',
            fields=[
                ('id', models.CharField(default=base.fields.generate_id, editable=False, max_length=22, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('state', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('documents', models.ManyToManyField(blank=True, related_name='_formcase_documents_+', to='documents.Document')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FormCaseComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('case', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='reportforms.FormCase')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportForm',
            fields=[
                ('id', models.CharField(default=base.fields.generate_id, editable=False, max_length=22, primary_key=True, serialize=False)),
                ('codename', models.CharField(max_length=250, unique=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ReportFormInstance',
            fields=[
                ('id', models.CharField(default=base.fields.generate_id, editable=False, max_length=22, primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('answer', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('answer_started', models.BooleanField(default=False, editable=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('received_at', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('new_sending', 'Sending'), ('new_sent', 'Sent'), ('answer_sending', 'Answer Sending'), ('answer_sent', 'Answer Sent'), ('answer_received', 'Answer Received'), ('answer_reviewed', 'Answer Reviewed')], default='new_sending', max_length=200)),
                ('comment', models.TextField(blank=True, null=True)),
                ('documents', models.ManyToManyField(blank=True, related_name='_reportforminstance_documents_+', to='documents.Document')),
                ('sent_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='form_instances', to='targets.Target')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportFormVersion',
            fields=[
                ('id', models.CharField(default=base.fields.generate_id, editable=False, max_length=22, primary_key=True, serialize=False)),
                ('code', models.IntegerField()),
                ('title', models.CharField(max_length=200)),
                ('form_schema', base.fields.ValidatedJSONField(default=reportforms.schema.get_default_form, schema={'properties': {'steps': {'items': {'properties': {'sections': {'items': {'properties': {'fields': {'items': {'anyOf': [{'properties': {'key': {'minLength': 1, 'type': 'string'}, 'label': {'minLength': 1, 'type': 'string'}, 'suffix': {'type': 'string'}, 'type': {'enum': ['text'], 'type': 'string'}}, 'required': ['type', 'key', 'label'], 'type': 'object'}, {'properties': {'key': {'minLength': 1, 'type': 'string'}, 'label': {'minLength': 1, 'type': 'string'}, 'type': {'enum': ['textarea'], 'type': 'string'}}, 'required': ['type', 'key', 'label'], 'type': 'object'}, {'properties': {'key': {'minLength': 1, 'type': 'string'}, 'options': {'items': {'properties': {'key': {'minLength': 1, 'type': 'string'}, 'label': {'minLength': 1, 'type': 'string'}}, 'type': 'object'}, 'type': 'array'}, 'type': {'enum': ['checkbox'], 'type': 'string'}}, 'required': ['type', 'key', 'options'], 'type': 'object'}, {'properties': {'key': {'minLength': 1, 'type': 'string'}, 'options': {'items': {'properties': {'label': {'minLength': 1, 'type': 'string'}, 'value': {'type': ['string', 'number', 'boolean']}}, 'type': 'object'}, 'type': 'array'}, 'type': {'enum': ['select'], 'type': 'string'}}, 'required': ['type', 'key', 'label', 'options'], 'type': 'object'}, {'properties': {'allowInput': {'type': 'boolean'}, 'inputLabel': {'type': 'string'}, 'key': {'minLength': 1, 'type': 'string'}, 'options': {'items': {'properties': {'label': {'minLength': 1, 'type': 'string'}, 'value': {'type': ['string', 'number', 'boolean']}}, 'type': 'object'}, 'type': 'array'}, 'type': {'enum': ['radio'], 'type': 'string'}}, 'required': ['type', 'key', 'options'], 'type': 'object'}, {'properties': {'columns': {'items': {'properties': {'header': {'minLength': 1, 'type': 'string'}, 'type': {'enum': ['label', 'text'], 'type': 'string'}, 'values': {'items': {'type': 'string'}, 'type': 'array'}}, 'type': 'object'}, 'type': 'array'}, 'key': {'minLength': 1, 'type': 'string'}, 'type': {'enum': ['table'], 'type': 'string'}}, 'required': ['type', 'key', 'columns'], 'type': 'object'}]}, 'type': 'array'}, 'title': {'type': 'string'}}, 'required': ['title', 'fields'], 'type': 'object'}, 'type': 'array'}, 'title': {'type': 'string'}}, 'required': ['title', 'sections'], 'type': 'object'}, 'type': 'array'}, 'title': {'type': 'string'}}, 'required': ['title', 'steps'], 'type': 'object'})),
                ('field_count', models.SmallIntegerField(default=0, editable=False)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='reportforms.ReportForm')),
            ],
        ),
        migrations.AddField(
            model_name='reportforminstance',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instances', to='reportforms.ReportFormVersion'),
        ),
        migrations.AddField(
            model_name='formcase',
            name='form_instance',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='reportforms.ReportFormInstance'),
        ),
        migrations.AlterUniqueTogether(
            name='reportformversion',
            unique_together={('code', 'form')},
        ),
    ]
